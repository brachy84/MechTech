buildscript {
    repositories {
        //jcenter()
        mavenCentral()
        //maven { url = "https://files.minecraftforge.net/maven" }
        maven { url = "https://jitpack.io" }
        maven { url = "https://plugins.gradle.org/m2/" }
        maven { url = "http://maven.minecraftforge.net/" }
    }
    dependencies {
        classpath("net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT")
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

version = "0.1.1"
group = "com.brachy84.mechtech" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "mechtech"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"
    mappings = "stable_39"
}


repositories {
    maven {
        url = "http://chickenbones.net/maven/"
    }
    maven {
        url = "https://maven.blamejared.com/"
    }
    maven {
        url = "http://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "tterrag maven"
        setUrl("http://maven.tterrag.com/")
    }
    maven {
        url "https://minecraft.curseforge.com/api/maven"
    }
}

dependencies {
    deobfCompile "codechicken-lib-1-8:CodeChickenLib-1.12.2:3.2.3.358:universal"
    //deobfCompile "CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-4.1.20.670"
    deobfCompile "mezz.jei:jei_1.12.2:4.16.1.302"

    compile files(
            //"libs/Gregicality-1.12.2-0.23-RC.jar",
            //"libs/CraftTweaker2-1.12-4.1.20.670.jar",
            "libs/gregtech-1.12.2-2.0.0-alpha.jar"
    )
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

def run(command) {
    def process = command.execute()
    def outputStream = new StringBuffer();
    def errorStream = new StringBuffer();
    process.waitForProcessOutput(outputStream, errorStream)

    errorStream.toString().with {
        if (it) {
            throw new GradleException("Error executing ${command}:\n> ${it}")
        }
    }

    return outputStream.toString().trim()
}

runClient {
    //jvmArgs "Xxm4G"
}
